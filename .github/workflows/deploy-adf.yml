name: ADF Build & Deploy Workflow

on:
  workflow_dispatch:
    inputs:
      appenv:
        description: 'Trigger deployment to development environment'
        required: true
        type: choice
        options:
          - dev

permissions:
  contents: read

jobs:
  build-adf-artifact:
    runs-on: ubuntu-latest
    outputs:
      artifact_id: ${{ steps.versioning.outputs.artifact_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract and Export Configuration Values
        env:
          CONFIG_VALUES: ${{ vars[github.event.inputs.appenv] }}
        run: |
          echo "Extracting config values for ${{ github.event.inputs.appenv }}..."
          for pair in ${CONFIG_VALUES//;/ }; do
            IFS='=' read -r key value <<< "$pair"
            echo "$key=$value" >> $GITHUB_ENV
          done

      - name: Debug environment variables
        run: |
          echo "FACTORY_NAME = $FACTORY_NAME"
          echo "SERVICE_ENDPOINT = $SERVICE_ENDPOINT"

      - name: Show parameters.json before update
        run: cat ARMTemplateForFactory/parameters.json

      - name: Update parameters.json using jq
        run: |
          jq \
            --arg factoryName "$FACTORY_NAME" \
            --arg serviceEndpoint "$SERVICE_ENDPOINT" \
            '.parameters.factoryName.value = $factoryName
             | .parameters.LS_ABLOB_properties_typeProperties_serviceEndpoint.value = $serviceEndpoint' \
            ARMTemplateForFactory/parameters.json > temp.json && mv temp.json ARMTemplateForFactory/parameters.json

      - name: Show parameters.json after update
        run: cat ARMTemplateForFactory/parameters.json

      - name: Define and export ARTIFACT_ID
        id: versioning
        run: |
          ARTIFACT_ID="adf-template-${{ github.run_number }}-${{ github.event.inputs.appenv }}-${GITHUB_SHA::7}"
          echo "Generated Artifact ID: $ARTIFACT_ID"
          echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV
          echo "artifact_id=$ARTIFACT_ID" >> $GITHUB_OUTPUT

      - name: Upload ADF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.versioning.outputs.artifact_id }}
          path: |
            ARMTemplateForFactory/parameters.json
            ARMTemplateForFactory/ARMTemplate.json

  deploy-adf-dev:
    runs-on: ubuntu-latest
    needs: build-adf-artifact
    if: ${{ github.event.inputs.appenv == 'dev' }}
    environment:
      name: 'Development'
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-adf-artifact.outputs.artifact_id }}

      # - name: Azure Login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Deploy ARM Template to ADF (Dev)
      #   run: |
      #     az deployment group create \
      #       --resource-group ${{ vars.DEV_RESOURCE_GROUP }} \
      #       --template-file ARMTemplate.json \
      #       --parameters @parameters.json \
      #       --name adf-deploy-dev-${{ github.run_number }}

      # - name: Validate ADF Deployment (Dev)
      #   run: |
      #     az datafactory show --name $FACTORY_NAME --resource-group ${{ vars.DEV_RESOURCE_GROUP }}

  deploy-adf-staging:
    runs-on: ubuntu-latest
    needs: deploy-adf-dev
    environment:
      name: 'Staging'  # Make sure this environment has required reviewers in GitHub UI
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-adf-artifact.outputs.artifact_id }}

      # - name: Azure Login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Deploy ARM Template to ADF (Staging)
      #   run: |
      #     az deployment group create \
      #       --resource-group ${{ vars.STAGING_RESOURCE_GROUP }} \
      #       --template-file ARMTemplate.json \
      #       --parameters @parameters.json \
      #       --name adf-deploy-staging-${{ github.run_number }}

      # - name: Validate ADF Deployment (Staging)
      #   run: |
      #     az datafactory show --name $FACTORY_NAME --resource-group ${{ vars.STAGING_RESOURCE_GROUP }}

  deploy-adf-production:
    runs-on: ubuntu-latest
    needs: deploy-adf-staging
    environment:
      name: 'Production'  # Make sure this environment has required reviewers in GitHub UI
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-adf-artifact.outputs.artifact_id }}

      # - name: Azure Login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Deploy ARM Template to ADF (Production)
      #   run: |
      #     az deployment group create \
      #       --resource-group ${{ vars.PRODUCTION_RESOURCE_GROUP }} \
      #       --template-file ARMTemplate.json \
      #       --parameters @parameters.json \
      #       --name adf-deploy-prod-${{ github.run_number }}

      # - name: Validate ADF Deployment (Production)
      #   run: |
      #     az datafactory show --name $FACTORY_NAME --resource-group ${{ vars.PRODUCTION_RESOURCE_GROUP }}
